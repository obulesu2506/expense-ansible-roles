- name: disable current nodejs version
  ansible.builtin.command: dnf module disable nodejs -y
  
- name: enable nodejs 20 version
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install nodejs & mysql
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql
  
- name: Create expense user for connecting DB from backend
  ansible.builtin.user:
    name: expense

- name: Create path/directory for downloading the backend code
  ansible.builtin.file:
    path: /app
    state: directory
  
- name: Download the code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip
  
- name: Unarchive/extract the code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes
  
- name: install dependencies
  community.general.npm:
  path: /tmp

- name: Copy backend service
  ansible.builtin.template:   #Usually need to use COPY module. The reason for using template is to pass host dynamic incase
  src: backend.service.j2  #backend.service for copy module, .j2 for template module
  dest: /etc/systemd/system/backend.service

- name: install python libraries
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - cryptography
  - PyMySQL
  
- name: import mysql data
  community.mysql.mysql_info:
    login_user: "{{ MYSQL_USER}}"
    login_password: "{{ MYSQL_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"
    target: /app/schema/backend.sql
    name: all
    state: import

- name: daemon reload and restart the service
  ansible.builtin.service:
    name: backend
    state: restarted
    enabled: yes
    daemon_reload: true
  
